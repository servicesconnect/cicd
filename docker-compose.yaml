# docker compose up -d redis mongodb mysql postgres rabbitmq elasticsearch kibana
services:
  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --loglevel warning
    volumes:
      - redis-data:/data

  mongodb:
    container_name: mongodb
    image: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db

  mysql:
    container_name: mysql
    image: mysql
    restart: always
    environment:
      - MYSQL_USER=servicesconnect
      - MYSQL_DATABASE=servicesconnect
      - MYSQL_ROOT_PASSWORD=servicesconnect
      - MYSQL_PASSWORD=servicesconnect
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql

  postgres:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=servicesconnect
      - POSTGRES_PASSWORD=servicesconnect
      - POSTGRES_DB=servicesconnect
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.13-rc-management-alpine
    restart: always
    ports:
      # AMQP protocol port
      - "5672:5672"
      # Management UI
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    restart: always
    environment:
      ES_JAVA_OPTS: -Xmx1g -Xms1g
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      network.host: 0.0.0.0
      transport.host: 127.0.0.1
      http.host: 0.0.0.0
      xpack.security.enabled: "true"
      xpack.security.authc.api_key.enabled: "true"
      xpack.monitoring.collection.enabled: "true"
      xpack.security.enrollment.enabled: "true"
      xpack.security.authc.token.enabled: "true"
      ELASTIC_PASSWORD: admin1234
    ports:
      - 9300:9300
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elastic

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.11.0
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch:9200"]
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=kibana
      - XPACK_FLEET_AGENTS_ELASTICSEARCH_HOSTS=["http://elasticsearch_container:9200"]
    ports:
      - 5601:5601
    networks:
      - elastic
    volumes:
      - ./kibana/kibana.yml/:/usr/share/kibana/config/kibana.yml:ro
    depends_on:
      - elasticsearch

  notifications:
    build:
      context: ../notifications
    ports:
      - "5001:5000"
    command: npm run start
    env_file: ../notifications/.env
    dockerfile: Dockerfile.dev
    depends_on:
      - rabbitmq
    restart: always
    container_name: notifications

volumes:
  redis-data:
  mongo-data:
  postgres-data:
  mysql-data:
  elasticsearch-data:
  rabbitmq-data:

networks:
  elastic:
    name: elastic
